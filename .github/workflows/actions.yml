# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# test
name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
        id-token: write
        contents: read

jobs:
#   build:
#     env:
#       env-file: my-environment-file.env

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 18
#       uses: actions/setup-java@v1
#       with:
#         java-version: 18
#     - name: Build with Maven
#       run: mvn -B clean package
#     - name: Archive jar file
#       uses: actions/upload-artifact@v2
#       with:
#         name: myjar
#         path: target/pw-gen-1.0-SNAPSHOT.jar
  
#   Deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
    
        
#     - name: fetch code
#       uses: actions/checkout@v2
#     - name: Set up JDK 18
#       uses: actions/setup-java@v1
#       with:
#        java-version: 18
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     - name: deploy
#       uses: appleboy/scp-action@master
#       with:
#        HOST: ${{ secrets.AZURE_SERVER_IP }}
#        USERNAME: ${{ secrets.AZURE_USR }}
#        KEY: ${{ secrets.AZURE_SERVER_KEY }}
#        source: "./*"
# #        source: "target/pw-gen-1.0-SNAPSHOT.jar"
#        target: "deployment"
#     - name: run jar via ssh
#       uses: appleboy/ssh-action@master
#       with:
#        HOST: ${{ secrets.AZURE_SERVER_IP }}
#        USERNAME: ${{ secrets.AZURE_USR }}
#        KEY: ${{ secrets.AZURE_SERVER_KEY }}
#        script: |
#         #cd ~/deployment/target
#         #java -jar pw-gen-1.0-SNAPSHOT.jar
#         sudo systemctl stop swe.service
#         sudo systemctl start swe.service
        
  Docker:
    name: build image and publish
    runs-on: ubuntu-latest
    env:
      env-file: my-environment-file.env
      CLUSTER_NAME: simplecalccluser
      RESOURSE_GROUP: hajarscalc

      
#     needs: [build]
    steps:

      - uses: actions/checkout@v1
#       - name: Login to Docker Hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }}
#           -p ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t hajaraburmeileh/simplecalc:${{ github.sha }} -t hajaraburmeileh/simplecalc:latest .
      - name: Publish Docker image
        run: docker push hajaraburmeileh/simplecalc --all-tags
             
      - uses: actions/checkout@v3
      - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        name: Azure login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          enable-AzPSSession: true
          
      - uses: azure/use-kubelogin@v1
        name: Set up kubelogin for non-interactive login
        with:
          kubelogin-version: v0.0.25
      - uses: azure/aks-set-context@v3
        name: Get K8s context
        with:
          admin: "false"
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURSE_GROUP }}
          use-kubelogin: "true"
          
      - uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deploy.yml
          images: |
            hajaraburmeileh/simplecalc:${{ github.sha }}